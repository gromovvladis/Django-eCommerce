# Generated by Django 4.2.11 on 2025-01-14 06:23

from django.db import migrations, models
import django.db.models.deletion
import oscar.core.utils
import oscar.models.fields
import oscar.models.fields.autoslugfield
import oscar.models.fields.slugfield
import oscar.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Additional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=128, verbose_name="Имя"),
                ),
                (
                    "article",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        help_text="Универсальный код товара (Артикул) является идентификатором для товара, который является специфичным для конкретного товара.",
                        max_length=64,
                        overwrite=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="Артикул товара",
                    ),
                ),
                (
                    "evotor_id",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="ID Эвотор"
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        blank=True,
                        help_text="Управляет порядком опций товара на страницах сведений о товаре.",
                        null=True,
                        verbose_name="Порядок",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "price_currency",
                    models.CharField(
                        default=oscar.core.utils.get_default_currency,
                        max_length=12,
                        verbose_name="Валюта",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Цена продажи",
                        max_digits=12,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Цена до скидки. Оставить пустым, если скидки нет",
                        max_digits=12,
                        null=True,
                        verbose_name="Цена до скидки",
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Закупочная цена за ед. доп товара",
                        max_digits=12,
                        verbose_name="Цена закупки",
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        default=0,
                        help_text="Вес дополнительного товара",
                        verbose_name="Вес",
                    ),
                ),
                (
                    "max_amount",
                    models.IntegerField(
                        default=1,
                        help_text="Максимальное количество доп. товара, которое может быть добавлено к основному товару",
                        verbose_name="Максимальное количество",
                    ),
                ),
                (
                    "tax",
                    models.CharField(
                        choices=[
                            ("NO_VAT", "Без НДС."),
                            ("VAT_0", "Основная ставка 0%"),
                            ("VAT_10", "Основная ставка 10%."),
                            ("VAT_10_110", "Расчётная ставка 10%."),
                            (
                                "VAT_18",
                                "Основная ставка 18%. С первого января 2019 года может указывать как на 18%, так и на 20% ставку.",
                            ),
                            (
                                "VAT_18_118",
                                "Расчётная ставка 18%. С первого января 2019 года может указывать как на 18%, так и на 20% ставку.",
                            ),
                        ],
                        default="NO_VAT",
                        max_length=128,
                        verbose_name="Налог в процентах",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Показывать этот дополнительный товар у товаров.",
                        verbose_name="Является общедоступным",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to="additionals",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Дата изменения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Дополнительный товар",
                "verbose_name_plural": "Дополнительные товары",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Имя")),
                (
                    "code",
                    models.SlugField(max_length=128, unique=True, verbose_name="Код"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Текст"),
                            ("integer", "Целое число"),
                            ("boolean", "Да / Нет"),
                            ("float", "Дробное число"),
                            ("richtext", "Текстовое поле"),
                            ("file", "Файл"),
                            ("image", "Изображение"),
                            ("option", "Один атрибут из группы"),
                            ("multi_option", "Множество атрибутов из группы"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(
                        default=False, verbose_name="Обязательный атрибут"
                    ),
                ),
            ],
            options={
                "verbose_name": "Атрибут",
                "verbose_name_plural": "Атрибуты",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="AttributeOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option", models.CharField(max_length=255, verbose_name="Опция")),
                (
                    "evotor_id",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        unique=True,
                        verbose_name="ID Эвотор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Параметр атрибута",
                "verbose_name_plural": "Параметры атрибута",
            },
        ),
        migrations.CreateModel(
            name="AttributeOptionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Имя")),
                (
                    "evotor_id",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        unique=True,
                        verbose_name="ID Эвотор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Группа атрибутов",
                "verbose_name_plural": "Группы атрибутов",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Имя"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Мета заголовок",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Мета описание"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="categories",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "slug",
                    oscar.models.fields.slugfield.SlugField(
                        allow_unicode=True,
                        max_length=255,
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="Порядок")),
                (
                    "is_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Показывать эту категорию в результатах поиска и каталогах.",
                        verbose_name="Является общедоступным",
                    ),
                ),
                (
                    "evotor_id",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="ID Эвотор"
                    ),
                ),
                (
                    "ancestors_are_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Предки этой категории являются общедоступными",
                        verbose_name="Категории предков являются общедоступными",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["path", "order"],
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=128, verbose_name="Имя"),
                ),
                (
                    "code",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        overwrite=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="Код",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Текст"),
                            ("integer", "Целое число"),
                            ("boolean", "Да / Нет"),
                            ("float", "Дробное число"),
                            ("select", "Селект"),
                            ("radio", "Радио кнопка"),
                            ("multi_select", "Multi select"),
                            ("checkbox", "Флажок"),
                        ],
                        default="text",
                        max_length=255,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(
                        default=False, verbose_name="Обязательная ли эта опция?"
                    ),
                ),
                (
                    "help_text",
                    models.CharField(
                        blank=True,
                        help_text="Текст справки, отображаемый пользователю в форме добавления в корзину",
                        max_length=255,
                        null=True,
                        verbose_name="Текст справки",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        help_text="Управляет порядком опций товара на страницах сведений о товаре.",
                        null=True,
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Дата изменения"
                    ),
                ),
                (
                    "option_group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Выберите группу параметров, если используете тип «Опция» или «Множество опций».",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_options",
                        to="catalogue.attributeoptiongroup",
                        verbose_name="Группа опций",
                    ),
                ),
            ],
            options={
                "verbose_name": "Опция",
                "verbose_name_plural": "Опиции",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "structure",
                    models.CharField(
                        choices=[
                            ("standalone", "Простой товар"),
                            ("parent", "Вариативный товар"),
                            ("child", "Вариация"),
                        ],
                        default="standalone",
                        max_length=10,
                        verbose_name="Вид товара",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Показывать этот товар в результатах поиска и каталогах.",
                        verbose_name="Является общедоступным",
                    ),
                ),
                (
                    "evotor_id",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="ID Эвотор"
                    ),
                ),
                (
                    "article",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        help_text="Универсальный код товара (Артикул) является идентификатором для товара, который является специфичным для конкретного товара.",
                        max_length=64,
                        overwrite=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="Артикул товара",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Название"
                    ),
                ),
                (
                    "slug",
                    oscar.models.fields.slugfield.SlugField(
                        allow_unicode=True,
                        max_length=255,
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "short_description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Краткое описание",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Мета заголовок",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Мета описание"
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        editable=False, null=True, verbose_name="Рейтинг"
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Определяет порядок отображения в списке. (Чем меньше, тем выше в списке)",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "cooking_time",
                    models.IntegerField(
                        default=20,
                        help_text="Приблизительное время, которое уйдет у повара на приготовление и сборку заказа на кухне. Указывается в минутах.",
                        verbose_name="Время приготовления",
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        blank=True,
                        help_text="Вес товара в граммах.",
                        null=True,
                        verbose_name="Вес",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Дата изменения"
                    ),
                ),
                (
                    "is_discountable",
                    models.BooleanField(
                        default=True,
                        help_text="Этот флаг указывает, можно ли использовать этот товар в предложении со скидками или нет",
                        verbose_name="Предоставляется скидка?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "ordering": ["-order"],
            },
        ),
        migrations.CreateModel(
            name="ProductAdditional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ranking",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Определяет порядок товаров. Товар с более высоким значениемЗначение появится перед значением с более низким рейтингом.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "additional_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.additional",
                        verbose_name="Дополнительный товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Дополнительный товар",
                "verbose_name_plural": "Дополнительные товары",
                "ordering": ["primary_product", "-ranking"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_variant",
                    models.BooleanField(
                        default=False, verbose_name="Используется для вариаций?"
                    ),
                ),
                (
                    "value_text",
                    models.TextField(blank=True, null=True, verbose_name="Текст"),
                ),
                (
                    "value_integer",
                    models.IntegerField(
                        blank=True, db_index=True, null=True, verbose_name="Целое число"
                    ),
                ),
                (
                    "value_boolean",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Логическое значение",
                    ),
                ),
                (
                    "value_float",
                    models.FloatField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Дробное число",
                    ),
                ),
                (
                    "value_richtext",
                    models.TextField(
                        blank=True, null=True, verbose_name="Текстовое поле"
                    ),
                ),
                (
                    "value_file",
                    models.FileField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=oscar.utils.models.get_image_upload_path,
                    ),
                ),
                (
                    "value_image",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=oscar.utils.models.get_image_upload_path,
                    ),
                ),
                (
                    "entity_object_id",
                    models.PositiveIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.attribute",
                        verbose_name="Атрибут",
                    ),
                ),
                (
                    "entity_content_type",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attribute_values",
                        to="catalogue.product",
                        verbose_name="товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Значение атрибута товара",
                "verbose_name_plural": "Значения атрибутов товара",
            },
        ),
        migrations.CreateModel(
            name="ProductRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ranking",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Определяет порядок товаров. Товар с более высоким значениемЗначение появится перед значением с более низким рейтингом.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "primary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_recommendations",
                        to="catalogue.product",
                        verbose_name="Основной товар",
                    ),
                ),
                (
                    "recommendation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.product",
                        verbose_name="Рекомендуемый товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рекомендация товара",
                "verbose_name_plural": "Рекомендации товара",
                "ordering": ["primary", "-ranking"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    oscar.models.fields.NullCharField(
                        max_length=255, unique=True, verbose_name="Код"
                    ),
                ),
                (
                    "original",
                    models.ImageField(
                        max_length=255,
                        upload_to=oscar.utils.models.get_image_upload_path,
                        verbose_name="Оригинал",
                    ),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Подпись"
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Изображение с нулевым порядком отображения будет основным",
                        verbose_name="Порядок отображения",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalogue.product",
                        verbose_name="товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение товара",
                "verbose_name_plural": "Изображения товаров",
                "ordering": ["display_order"],
            },
        ),
        migrations.CreateModel(
            name="ProductClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Имя")),
                (
                    "slug",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        overwrite=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                (
                    "measure_name",
                    models.CharField(
                        choices=[
                            ("", "Не задано"),
                            ("шт", "шт - штуки"),
                            ("кг", "кг - килограммы"),
                            ("л", "л - литры"),
                            ("мл", "мл - миллилитры"),
                            ("м", "м - метры"),
                            ("компл", "компл - комплекты"),
                            ("упак", "упак - упаковки"),
                            ("ед", "ед - единицы"),
                        ],
                        default="",
                        max_length=128,
                        verbose_name="Единицы изменения",
                    ),
                ),
                (
                    "requires_shipping",
                    models.BooleanField(
                        default=True, verbose_name="Доставка необходима?"
                    ),
                ),
                (
                    "track_stock",
                    models.BooleanField(
                        default=True, verbose_name="Отслеживать запасы"
                    ),
                ),
                (
                    "class_additionals",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Дополнительные товары для всех товаров этого класса",
                        through="catalogue.ProductAdditional",
                        to="catalogue.additional",
                        verbose_name="Дополнительные товары класса",
                    ),
                ),
                (
                    "class_attributes",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Атрибуты для всех товаров этого класса",
                        through="catalogue.ProductAttribute",
                        to="catalogue.attribute",
                        verbose_name="Атрибуты класса",
                    ),
                ),
                (
                    "options",
                    models.ManyToManyField(
                        blank=True, to="catalogue.option", verbose_name="Опция"
                    ),
                ),
            ],
            options={
                "verbose_name": "Класс товара",
                "verbose_name_plural": "Классы товара",
                "ordering": ["name"],
                "permissions": (
                    ("full_access", "Полный доступ к товарам"),
                    ("read", "Просматривать товары и категории"),
                    ("update_stockrecord", "Изменять наличие товаров"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория товара",
                "verbose_name_plural": "Категории товара",
                "ordering": ["product", "category"],
            },
        ),
        migrations.AddField(
            model_name="productattribute",
            name="product_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attribute_values",
                to="catalogue.productclass",
                verbose_name="Класс товара",
            ),
        ),
        migrations.AddField(
            model_name="productattribute",
            name="value_multi_option",
            field=models.ManyToManyField(
                blank=True,
                related_name="multi_valued_attribute_values",
                to="catalogue.attributeoption",
                verbose_name="Значения группы атрибутов",
            ),
        ),
        migrations.AddField(
            model_name="productattribute",
            name="value_option",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="catalogue.attributeoption",
                verbose_name="Одно значение из группы атрибутов",
            ),
        ),
        migrations.AddField(
            model_name="productadditional",
            name="primary_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="catalogue.productclass",
                verbose_name="Основной класс",
            ),
        ),
        migrations.AddField(
            model_name="productadditional",
            name="primary_product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="catalogue.product",
                verbose_name="Основной товар",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="attributes",
            field=models.ManyToManyField(
                help_text="Атрибут товара — это то, что этот товар можетиметь, например, размер, указанный его классом или в самом товаре",
                through="catalogue.ProductAttribute",
                to="catalogue.attribute",
                verbose_name="Атрибуты",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="categories",
            field=models.ManyToManyField(
                through="catalogue.ProductCategory",
                to="catalogue.category",
                verbose_name="Категории",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                help_text="Выбирайте родительский товар только в том случае, если вы создаете дочерний товар. Например, если это размер 4 конкретной футболки. Оставьте пустым, если это автономный товар (т.е. существует только одна версия этого товара).",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="catalogue.product",
                verbose_name="Вариативный товар",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_additionals",
            field=models.ManyToManyField(
                blank=True,
                help_text="Дополнительные товары для данного товара",
                through="catalogue.ProductAdditional",
                to="catalogue.additional",
                verbose_name="Дополнительные товары товара",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_class",
            field=models.ForeignKey(
                blank=True,
                help_text="Выберите, что это за товар",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="catalogue.productclass",
                verbose_name="Тип товара",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_options",
            field=models.ManyToManyField(
                blank=True,
                help_text="Параметры — это значения, которые могут быть связаны с элементом, когда товар добавляется в корзину покупателя. Это может быть что-то вроде персонализированного сообщения для печати на футболке",
                to="catalogue.option",
                verbose_name="Опции товара",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="recommended_products",
            field=models.ManyToManyField(
                blank=True,
                help_text="Это товары, которые рекомендуется сопровождать основной товар.",
                through="catalogue.ProductRecommendation",
                to="catalogue.product",
                verbose_name="Рекомендуемые товары",
            ),
        ),
        migrations.AddField(
            model_name="attributeoption",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="options",
                to="catalogue.attributeoptiongroup",
                verbose_name="Группа",
            ),
        ),
        migrations.AddField(
            model_name="attribute",
            name="option_group",
            field=models.ForeignKey(
                blank=True,
                help_text="Выберите группу параметров, если используете тип «Атрибут группы» или «Множество атрибутов группы».",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_attributes",
                to="catalogue.attributeoptiongroup",
                verbose_name="Группа атрибутов",
            ),
        ),
    ]
