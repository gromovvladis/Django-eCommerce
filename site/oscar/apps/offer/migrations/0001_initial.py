# Generated by Django 4.2.11 on 2024-12-18 13:44

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import oscar.models.fields
import oscar.models.fields.autoslugfield


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BaseOfferMixin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConditionalOffer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Это отображается в корзине клиента",
                        max_length=128,
                        unique=True,
                        verbose_name="Имя",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to="Offers", verbose_name="Изображение"
                    ),
                ),
                (
                    "slug",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        overwrite=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Это отображается на странице просмотра предложений",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "offer_type",
                    models.CharField(
                        choices=[
                            (
                                "Общее",
                                "Общее предложение - доступно всем пользователям",
                            ),
                            (
                                "Промокод",
                                "Промокод — доступно только после ввода кода промокода",
                            ),
                            (
                                "Пользовательское",
                                "Пользовательское предложение - доступно определенным типам пользователей.",
                            ),
                            (
                                "Предложение сеанса",
                                "Предложение сеанса\xa0– временное предложение, доступное для пользователей на время сеанса",
                            ),
                        ],
                        default="Общее",
                        max_length=128,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "exclusive",
                    models.BooleanField(
                        default=True,
                        help_text="Эксклюзивные предложения не могут быть объединены на одни и те же товары",
                        verbose_name="Эксклюзивное предложение",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        default="Open", max_length=64, verbose_name="Статус"
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        db_index=True,
                        default=0,
                        help_text="Предложения с наивысшим приоритетом применяются в первую очередь",
                        verbose_name="Приоритет",
                    ),
                ),
                (
                    "start_datetime",
                    models.DateTimeField(
                        blank=True,
                        help_text="Предложения активны с даты начала. Оставьте это поле пустым, если у предложения нет даты начала",
                        null=True,
                        verbose_name="Дата начала",
                    ),
                ),
                (
                    "end_datetime",
                    models.DateTimeField(
                        blank=True,
                        help_text="Предложения активны до даты окончания. Оставьте это поле пустым, если у предложения нет срока действия.",
                        null=True,
                        verbose_name="Дата окончания",
                    ),
                ),
                (
                    "max_global_applications",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Сколько раз можно использовать это предложение, прежде чем оно станет недоступным",
                        null=True,
                        verbose_name="Максимальное количество глобальных применений",
                    ),
                ),
                (
                    "max_user_applications",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Сколько раз один пользователь может воспользоваться этим предложением",
                        null=True,
                        verbose_name="Максимальное количество применений пользователем",
                    ),
                ),
                (
                    "max_basket_applications",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Сколько раз это предложение можно применить к корзине (и заказу)",
                        null=True,
                        verbose_name="Максимальное количество применений в корзине",
                    ),
                ),
                (
                    "max_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Когда сумма всех скидок предложения достигнет этого значения,то предложение становится недоступным",
                        max_digits=12,
                        null=True,
                        verbose_name="Максимальная скидка",
                    ),
                ),
                (
                    "total_discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Общая скидка",
                    ),
                ),
                (
                    "num_applications",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество применений"
                    ),
                ),
                (
                    "num_orders",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество заказов"
                    ),
                ),
                (
                    "redirect_url",
                    oscar.models.fields.ExtendedURLField(
                        blank=True,
                        verbose_name="Перенаправление URL-адреса (необязательно)",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
            ],
            options={
                "verbose_name": "Условное предложение",
                "verbose_name_plural": "Условные предложения",
                "ordering": ["-priority", "pk"],
            },
        ),
        migrations.CreateModel(
            name="Range",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, unique=True, verbose_name="Имя"),
                ),
                (
                    "slug",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        overwrite=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Общедоступные ассортименты имеют страницу для клиентов.",
                        verbose_name="Является ли общедоступным",
                    ),
                ),
                (
                    "includes_all_products",
                    models.BooleanField(
                        default=False,
                        help_text="Включает все товары выбраных категорий.",
                        verbose_name="Все товары?",
                    ),
                ),
                (
                    "proxy_class",
                    oscar.models.fields.NullCharField(
                        default=None,
                        max_length=255,
                        unique=True,
                        verbose_name="Пользовательский прокси-класс",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
            ],
            options={
                "verbose_name": "Ассортимент",
                "verbose_name_plural": "Ассортимент",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RangeProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("display_order", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Benefit",
            fields=[
                (
                    "baseoffermixin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="offer.baseoffermixin",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Percentage", "Скидка — это процент от стоимости товара."),
                            (
                                "Absolute",
                                "Скидка\xa0— фиксированная сумма от суммы корзины.",
                            ),
                            (
                                "Fixed",
                                "Скидка — это фиксированная сумма от стоимости товара.",
                            ),
                            (
                                "Multibuy",
                                "Скидка – это предоставление самого дешевого товара бесплатно.",
                            ),
                            (
                                "Fixed price",
                                "Приобретайте товары, соответствующие условию, по фиксированной цене.",
                            ),
                            (
                                "Shipping absolute",
                                "Скидка – это фиксированная сумма стоимости доставки.",
                            ),
                            (
                                "Shipping fixed price",
                                "Получите доставку по фиксированной цене",
                            ),
                            (
                                "Shipping percentage",
                                "Скидка представляет собой процент от стоимости доставки.",
                            ),
                        ],
                        max_length=128,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "value",
                    oscar.models.fields.PositiveDecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Значение",
                    ),
                ),
                (
                    "max_affected_items",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Установите это, чтобы скидка не расходовала все товары в пределах, находящихся в корзине.",
                        null=True,
                        verbose_name="Максимальное количество товаров для скидки",
                    ),
                ),
                (
                    "proxy_class",
                    oscar.models.fields.NullCharField(
                        default=None,
                        max_length=255,
                        verbose_name="Пользовательский класс",
                    ),
                ),
            ],
            options={
                "verbose_name": "Предложение скидки",
                "verbose_name_plural": "Предложения скидки",
            },
            bases=("offer.baseoffermixin", models.Model),
        ),
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "baseoffermixin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="offer.baseoffermixin",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Count",
                                "Зависит от количества товаров в корзине, находящихся в определенном состоянии.",
                            ),
                            (
                                "Value",
                                "Зависит от стоимости товаров в корзине, находящихся в определенном состоянии.",
                            ),
                            (
                                "Coverage",
                                "Должно содержать заданное количество ОТЛИЧНЫХ элементов из диапазона условий.",
                            ),
                        ],
                        max_length=128,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "value",
                    oscar.models.fields.PositiveDecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Значение",
                    ),
                ),
                (
                    "proxy_class",
                    oscar.models.fields.NullCharField(
                        default=None,
                        max_length=255,
                        verbose_name="Пользовательский класс",
                    ),
                ),
            ],
            options={
                "verbose_name": "Условие",
                "verbose_name_plural": "Условия",
            },
            bases=("offer.baseoffermixin", models.Model),
        ),
        migrations.CreateModel(
            name="RangeProductFileUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "filepath",
                    models.CharField(max_length=255, verbose_name="Путь к файлу"),
                ),
                ("size", models.PositiveIntegerField(verbose_name="Размер")),
                (
                    "date_uploaded",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Дата загрузки"
                    ),
                ),
                (
                    "upload_type",
                    models.CharField(
                        choices=[
                            ("included", "Included products upload"),
                            ("excluded", "Excluded products upload"),
                        ],
                        default="included",
                        max_length=8,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Failed", "Failed"),
                            ("Processed", "Processed"),
                        ],
                        default="Pending",
                        max_length=32,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "error_message",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Сообщение об ошибке"
                    ),
                ),
                (
                    "date_processed",
                    models.DateTimeField(null=True, verbose_name="Дата обработки"),
                ),
                (
                    "num_new_skus",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Количество новых SKU"
                    ),
                ),
                (
                    "num_unknown_skus",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Количество неизвестных SKU"
                    ),
                ),
                (
                    "num_duplicate_skus",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Количество повторяющихся SKU"
                    ),
                ),
                (
                    "range",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="file_uploads",
                        to="offer.range",
                        verbose_name="Ассортимент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Загруженный файл товара ассортимента",
                "verbose_name_plural": "Загруженные файлы товаров линейки",
                "ordering": ("-date_uploaded",),
            },
        ),
    ]
