# Generated by Django 4.2.11 on 2024-08-21 10:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "username",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Формат телефона: '+79950750075",
                        max_length=12,
                        region=None,
                        unique=True,
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="Имя"),
                ),
                (
                    "staff",
                    models.CharField(
                        blank=True, max_length=127, verbose_name="Должность"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Повар, Курьер, Менеджер и т.д.",
                        verbose_name="Статус сотрудника",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Активен пользователь или нет",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Email подтвержден или нет",
                        verbose_name="Email verified",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Дата регистрации",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Дата последнего входа ",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table": "auth_user",
                "ordering": [
                    "username",
                    "email",
                    "password",
                    "name",
                    "is_staff",
                    "staff",
                    "is_active",
                    "is_email_verified",
                    "date_joined",
                    "last_login",
                ],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("М", "Мужчина"), ("Ж", "Женщина")],
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                ("age", models.PositiveIntegerField(verbose_name="Age")),
                ("image", models.ImageField(blank=True, upload_to="profile")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
