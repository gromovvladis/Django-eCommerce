# Generated by Django 4.2.11 on 2024-06-26 07:54

from django.db import migrations, models
import django.db.models.deletion
import oscar.core.utils
import oscar.models.fields
import oscar.models.fields.autoslugfield
import oscar.models.fields.slugfield
import oscar.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Additional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=128, verbose_name="Имя"),
                ),
                (
                    "code",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        populate_from="name",
                        unique=True,
                        verbose_name="Код",
                    ),
                ),
                (
                    "upc",
                    models.CharField(
                        max_length=128,
                        unique=True,
                        verbose_name="Уникальный код товара в базе",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        blank=True,
                        help_text="Управляет порядком опций продукта на страницах сведений о продукте.",
                        null=True,
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Показывать этот продукт в результатах поиска и каталогах.",
                        verbose_name="Является общедоступным",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "price_currency",
                    models.CharField(
                        default=oscar.core.utils.get_default_currency,
                        max_length=12,
                        verbose_name="Валюта",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Цена продажи",
                        max_digits=12,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Цена до скидки. Оставить пустым, если скидки нет",
                        max_digits=12,
                        null=True,
                        verbose_name="Цена до скидки",
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        default=0,
                        help_text="Вес дополнительного товара",
                        verbose_name="Вес",
                    ),
                ),
                (
                    "max_amount",
                    models.IntegerField(
                        default=1,
                        help_text="Максимальное количество доп. товара, которое может быть добавлено к основному товару",
                        verbose_name="Максимальное количество",
                    ),
                ),
                (
                    "img",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to="catalogue",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Дата изменения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Дополнительный товар",
                "verbose_name_plural": "Дополнительные товары",
                "ordering": ["order", "name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AttributeOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option", models.CharField(max_length=255, verbose_name="Опция")),
                (
                    "code",
                    oscar.models.fields.NullCharField(
                        max_length=255,
                        unique=True,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Параметр атрибута",
                "verbose_name_plural": "Параметры атрибута",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AttributeOptionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Имя")),
                (
                    "code",
                    oscar.models.fields.NullCharField(
                        max_length=255,
                        unique=True,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Группа параметров атрибута",
                "verbose_name_plural": "Группы параметров атрибутов",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Имя"),
                ),
                (
                    "code",
                    oscar.models.fields.NullCharField(
                        max_length=255, unique=True, verbose_name="Код"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Мета заголовок",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Мета описание"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="categories",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "slug",
                    oscar.models.fields.slugfield.SlugField(
                        allow_unicode=True,
                        max_length=255,
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="Порядок")),
                (
                    "is_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Показывать эту категорию в результатах поиска и каталогах.",
                        verbose_name="Является общедоступным",
                    ),
                ),
                (
                    "is_promo",
                    models.BooleanField(
                        default=False,
                        help_text="Показывать эту категорию в списке категорий, как промокатегорию ('Хиты' или 'Новинки')",
                        verbose_name="Является промо-категорией в списке категорий",
                    ),
                ),
                (
                    "ancestors_are_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Предки этой категории являются общедоступными",
                        verbose_name="Категории предков являются общедоступными",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["order", "path"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=128, verbose_name="Имя"),
                ),
                (
                    "code",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        populate_from="name",
                        unique=True,
                        verbose_name="Код",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Текст"),
                            ("integer", "Целое число"),
                            ("boolean", "Да / Нет"),
                            ("float", "Дробное число"),
                            ("select", "Селект"),
                            ("radio", "Радио кнопка"),
                            ("multi_select", "Multi select"),
                            ("checkbox", "Флажок"),
                        ],
                        default="text",
                        max_length=255,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(
                        default=False, verbose_name="Требуется ли эта опция?"
                    ),
                ),
                (
                    "help_text",
                    models.CharField(
                        blank=True,
                        help_text="Текст справки, отображаемый пользователю в форме добавления в корзину",
                        max_length=255,
                        null=True,
                        verbose_name="Текст справки",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        help_text="Управляет порядком опций продукта на страницах сведений о продукте.",
                        null=True,
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Дата изменения"
                    ),
                ),
                (
                    "option_group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Выберите группу параметров, если используете тип «Опция» или «Множество опций».",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_options",
                        to="catalogue.attributeoptiongroup",
                        verbose_name="Группа опций",
                    ),
                ),
            ],
            options={
                "verbose_name": "Опция",
                "verbose_name_plural": "Опиция",
                "ordering": ["order", "name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "structure",
                    models.CharField(
                        choices=[
                            ("standalone", "Простой товар"),
                            ("parent", "Вариативный товар"),
                            ("child", "Вариация"),
                        ],
                        default="standalone",
                        max_length=10,
                        verbose_name="Вид продукта",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Показывать этот продукт в результатах поиска и каталогах.",
                        verbose_name="Является общедоступным",
                    ),
                ),
                (
                    "upc",
                    oscar.models.fields.NullCharField(
                        help_text="Универсальный код продукта (UPC) является идентификатором для продукта, который не является специфичным для конкретногоПоставщик. Например, ISBN книги",
                        max_length=64,
                        unique=True,
                        verbose_name="Товарный код продукта UPC",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name=("Название продукта", "Название"),
                    ),
                ),
                (
                    "variant",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name=("Название варианта", "Вариант"),
                    ),
                ),
                (
                    "slug",
                    oscar.models.fields.slugfield.SlugField(
                        allow_unicode=True,
                        max_length=255,
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "short_description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Краткое описание",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Мета заголовок",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Мета описание"
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        editable=False, null=True, verbose_name="Рейтинг"
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="Порядок")),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Дата изменения"
                    ),
                ),
                (
                    "is_discountable",
                    models.BooleanField(
                        default=True,
                        help_text="Этот флаг указывает, можно ли использовать этот продукт в предложении со скидками или нет",
                        verbose_name="Предоставляется скидка?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "ordering": ["-order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductAdditional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ranking",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Определяет порядок товаров. Товар с более высоким значениемЗначение появится перед значением с более низким рейтингом.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "additional",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.additional",
                        verbose_name="Рекомендуемый продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Дополнительный товар",
                "verbose_name_plural": "Дополнительные товары",
                "ordering": ["primary_class", "primary_product", "-ranking"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Имя")),
                ("code", models.SlugField(max_length=128, verbose_name="Код")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Текст"),
                            ("integer", "Целое число"),
                            ("boolean", "Да / Нет"),
                            ("float", "Дробное число"),
                            ("richtext", "Текстовое поле"),
                            ("option", "Опция"),
                            ("multi_option", "Мульти-опция"),
                            ("file", "Файл"),
                            ("image", "Изображение"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(default=False, verbose_name="Необходимый"),
                ),
                (
                    "option_group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Выберите группу параметров, если используете тип «Опция» или «Множество опций».",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_attributes",
                        to="catalogue.attributeoptiongroup",
                        verbose_name="Группа опций",
                    ),
                ),
            ],
            options={
                "verbose_name": "Атрибут продукта",
                "verbose_name_plural": "Атрибуты продукта",
                "ordering": ["code"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ranking",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Определяет порядок товаров. Товар с более высоким значениемЗначение появится перед значением с более низким рейтингом.",
                        verbose_name="Рейтинг",
                    ),
                ),
                (
                    "primary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_recommendations",
                        to="catalogue.product",
                        verbose_name="Основной продукт",
                    ),
                ),
                (
                    "recommendation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.product",
                        verbose_name="Рекомендуемый продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рекомендация продукта",
                "verbose_name_plural": "Рекомендации продукта",
                "ordering": ["primary", "-ranking"],
                "abstract": False,
                "unique_together": {("primary", "recommendation")},
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    oscar.models.fields.NullCharField(
                        max_length=255, unique=True, verbose_name="Код"
                    ),
                ),
                (
                    "original",
                    models.ImageField(
                        max_length=255,
                        upload_to=oscar.utils.models.get_image_upload_path,
                        verbose_name="Оригинал",
                    ),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Подпись"
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Изображение с нулевым порядком отображения будет основным",
                        verbose_name="Порядок отображения",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalogue.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение продукта",
                "verbose_name_plural": "Изображения продуктов",
                "ordering": ["display_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Имя")),
                (
                    "slug",
                    oscar.models.fields.autoslugfield.AutoSlugField(
                        allow_unicode=True,
                        blank=True,
                        editable=False,
                        max_length=128,
                        populate_from="name",
                        unique=True,
                        verbose_name="Ярлык",
                    ),
                ),
                (
                    "requires_shipping",
                    models.BooleanField(
                        default=True, verbose_name="Доставка необходима?"
                    ),
                ),
                (
                    "track_stock",
                    models.BooleanField(
                        default=True, verbose_name="Отслеживать запасы"
                    ),
                ),
                (
                    "options",
                    models.ManyToManyField(
                        blank=True, to="catalogue.option", verbose_name="Опиция"
                    ),
                ),
                (
                    "product_additionals",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Доп товары",
                        through="catalogue.ProductAdditional",
                        to="catalogue.additional",
                        verbose_name="Дополнительные товары класса",
                    ),
                ),
            ],
            options={
                "verbose_name": "Класс товара",
                "verbose_name_plural": "Классы товара",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория товара",
                "verbose_name_plural": "Категории товара",
                "ordering": ["product", "category"],
                "abstract": False,
                "unique_together": {("product", "category")},
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value_text",
                    models.TextField(blank=True, null=True, verbose_name="Текст"),
                ),
                (
                    "value_integer",
                    models.IntegerField(
                        blank=True, db_index=True, null=True, verbose_name="Целое число"
                    ),
                ),
                (
                    "value_boolean",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Логическое значение",
                    ),
                ),
                (
                    "value_float",
                    models.FloatField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Дробное число",
                    ),
                ),
                (
                    "value_richtext",
                    models.TextField(
                        blank=True, null=True, verbose_name="Текстовое поле"
                    ),
                ),
                (
                    "value_file",
                    models.FileField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=oscar.utils.models.get_image_upload_path,
                    ),
                ),
                (
                    "value_image",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=oscar.utils.models.get_image_upload_path,
                    ),
                ),
                (
                    "entity_object_id",
                    models.PositiveIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.productattribute",
                        verbose_name="Атрибут",
                    ),
                ),
                (
                    "entity_content_type",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attribute_values",
                        to="catalogue.product",
                        verbose_name="Продукт",
                    ),
                ),
                (
                    "value_multi_option",
                    models.ManyToManyField(
                        blank=True,
                        related_name="multi_valued_attribute_values",
                        to="catalogue.attributeoption",
                        verbose_name="Значение нескольких вариантов Мульти-Опции",
                    ),
                ),
                (
                    "value_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.attributeoption",
                        verbose_name="Вариант значения Опции",
                    ),
                ),
            ],
            options={
                "verbose_name": "Значение атрибута продукта",
                "verbose_name_plural": "Значения атрибутов продукта",
                "abstract": False,
                "unique_together": {("attribute", "product")},
            },
        ),
        migrations.AddField(
            model_name="productattribute",
            name="product_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attributes",
                to="catalogue.productclass",
                verbose_name="Тип продукта",
            ),
        ),
        migrations.AddField(
            model_name="productadditional",
            name="primary_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="class_additional",
                to="catalogue.productclass",
                verbose_name="Основной продукт",
            ),
        ),
        migrations.AddField(
            model_name="productadditional",
            name="primary_product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_additional",
                to="catalogue.product",
                verbose_name="Основной продукт",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="attributes",
            field=models.ManyToManyField(
                help_text="Атрибут продукта — это то, что этот продукт можетиметь, например, размер, указанный его классом",
                through="catalogue.ProductAttributeValue",
                to="catalogue.productattribute",
                verbose_name="Атрибуты",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="categories",
            field=models.ManyToManyField(
                through="catalogue.ProductCategory",
                to="catalogue.category",
                verbose_name="Категории",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                help_text="Выбирайте родительский продукт только в том случае, если вы создаете дочерний товар. Например, если это размер 4 конкретной футболки. Оставьте пустым, если это автономный продукт (т.е. существует только одна версия этого продукта).",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="catalogue.product",
                verbose_name="Вариативный товар",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_additionals",
            field=models.ManyToManyField(
                blank=True,
                help_text="Доп товары",
                through="catalogue.ProductAdditional",
                to="catalogue.additional",
                verbose_name="Дополнительные товары продукта",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_class",
            field=models.ForeignKey(
                blank=True,
                help_text="Выберите, что это за продукт",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="catalogue.productclass",
                verbose_name="Тип продукта",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_options",
            field=models.ManyToManyField(
                blank=True,
                help_text="Параметры — это значения, которые могут быть связаны с элементом, когда товар добавляется в корзину покупателя. Это может быть что-то вроде персонализированного сообщения для печати на футболке",
                to="catalogue.option",
                verbose_name="Опции продукта",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="recommended_products",
            field=models.ManyToManyField(
                blank=True,
                help_text="Это продукты, которые рекомендуется сопровождать основной продукт.",
                through="catalogue.ProductRecommendation",
                to="catalogue.product",
                verbose_name="Рекомендуемые продукты",
            ),
        ),
        migrations.AddField(
            model_name="attributeoption",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="options",
                to="catalogue.attributeoptiongroup",
                verbose_name="Группа",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productattribute",
            unique_together={("code", "product_class")},
        ),
        migrations.AlterUniqueTogether(
            name="productadditional",
            unique_together={("primary_class", "primary_product", "additional")},
        ),
        migrations.AlterUniqueTogether(
            name="attributeoption",
            unique_together={("group", "option")},
        ),
    ]
