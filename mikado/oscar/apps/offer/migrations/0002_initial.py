# Generated by Django 4.2.11 on 2024-09-03 09:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("offer", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("catalogue", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="rangeproductfileupload",
            name="uploaded_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Загружено пользователем",
            ),
        ),
        migrations.AddField(
            model_name="rangeproduct",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="catalogue.product"
            ),
        ),
        migrations.AddField(
            model_name="rangeproduct",
            name="range",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="offer.range"
            ),
        ),
        migrations.AddField(
            model_name="range",
            name="classes",
            field=models.ManyToManyField(
                blank=True,
                related_name="classes",
                to="catalogue.productclass",
                verbose_name="Типы продуктов",
            ),
        ),
        migrations.AddField(
            model_name="range",
            name="excluded_products",
            field=models.ManyToManyField(
                blank=True,
                related_name="excludes",
                to="catalogue.product",
                verbose_name="Исключенные продукты",
            ),
        ),
        migrations.AddField(
            model_name="range",
            name="included_categories",
            field=models.ManyToManyField(
                blank=True,
                related_name="includes",
                to="catalogue.category",
                verbose_name="Включенные категории",
            ),
        ),
        migrations.AddField(
            model_name="range",
            name="included_products",
            field=models.ManyToManyField(
                blank=True,
                related_name="includes",
                through="offer.RangeProduct",
                to="catalogue.product",
                verbose_name="Включенные продукты",
            ),
        ),
        migrations.AddField(
            model_name="conditionaloffer",
            name="benefit",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="offers",
                to="offer.benefit",
                verbose_name="Выгода",
            ),
        ),
        migrations.AddField(
            model_name="conditionaloffer",
            name="combinations",
            field=models.ManyToManyField(
                blank=True,
                help_text="Выберите другие неэксклюзивные предложения, с которыми можно объединить это предложение на те же товары.",
                limit_choices_to={"exclusive": False},
                related_name="in_combination",
                to="offer.conditionaloffer",
            ),
        ),
        migrations.AddField(
            model_name="conditionaloffer",
            name="condition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="offers",
                to="offer.condition",
                verbose_name="Условие",
            ),
        ),
        migrations.AddField(
            model_name="condition",
            name="range",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="offer.range",
                verbose_name="Ассортимент",
            ),
        ),
        migrations.AddField(
            model_name="benefit",
            name="range",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="offer.range",
                verbose_name="Ассортимент",
            ),
        ),
        migrations.CreateModel(
            name="AbsoluteDiscountBenefit",
            fields=[],
            options={
                "verbose_name": "Абсолютная скидка",
                "verbose_name_plural": "Абсолютные скидки",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.benefit",),
        ),
        migrations.CreateModel(
            name="CountCondition",
            fields=[],
            options={
                "verbose_name": "Условие подсчета",
                "verbose_name_plural": "Условия подсчетов",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.condition",),
        ),
        migrations.CreateModel(
            name="CoverageCondition",
            fields=[],
            options={
                "verbose_name": "Условие покрытия",
                "verbose_name_plural": "Условия покрытиий",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.condition",),
        ),
        migrations.CreateModel(
            name="FixedPriceBenefit",
            fields=[],
            options={
                "verbose_name": "Фиксированная скидка",
                "verbose_name_plural": "Фиксированные скидки",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.benefit",),
        ),
        migrations.CreateModel(
            name="MultibuyDiscountBenefit",
            fields=[],
            options={
                "verbose_name": "Скидка при покупке нескольких покупок",
                "verbose_name_plural": "Скидки при покупке нескольких покупок",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.benefit",),
        ),
        migrations.CreateModel(
            name="PercentageDiscountBenefit",
            fields=[],
            options={
                "verbose_name": "Процентная скидка",
                "verbose_name_plural": "Процентные скидки",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.benefit",),
        ),
        migrations.CreateModel(
            name="ShippingBenefit",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.benefit",),
        ),
        migrations.CreateModel(
            name="ValueCondition",
            fields=[],
            options={
                "verbose_name": "Условие значения",
                "verbose_name_plural": "Условия значений",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.condition",),
        ),
        migrations.AlterUniqueTogether(
            name="rangeproduct",
            unique_together={("range", "product")},
        ),
        migrations.CreateModel(
            name="FixedUnitDiscountBenefit",
            fields=[],
            options={
                "verbose_name": "Фиксированная скидка за единицу",
                "verbose_name_plural": "Фиксированные скидки за единицу",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.absolutediscountbenefit",),
        ),
        migrations.CreateModel(
            name="ShippingAbsoluteDiscountBenefit",
            fields=[],
            options={
                "verbose_name": "Преимущество абсолютной скидки на доставку",
                "verbose_name_plural": "Преимущества абсолютной скидки на доставку",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.shippingbenefit",),
        ),
        migrations.CreateModel(
            name="ShippingFixedPriceBenefit",
            fields=[],
            options={
                "verbose_name": "Фиксированная цена доставки",
                "verbose_name_plural": "Фиксированные цены доставки",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.shippingbenefit",),
        ),
        migrations.CreateModel(
            name="ShippingPercentageDiscountBenefit",
            fields=[],
            options={
                "verbose_name": "Процентная скидка на доставку",
                "verbose_name_plural": "Процентнаые скидки на доставку",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("offer.shippingbenefit",),
        ),
    ]
